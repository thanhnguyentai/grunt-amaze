<!DOCTYPE html>
<html lang="en" class="no-js">

<head>

    <meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1" />

    <title>amaze-website | {{ title }}</title>

    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:site_name" content="" />
    <meta property="og:description" content="" />

    <meta name="author" content="" />
    <meta name="description" content="" />

    <link rel="canonical" href="" />

<<<<<<< HEAD
    <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1" />

=======
>>>>>>> 9203e65267889e6a05aca4d34accb7c76bafdf8d
    <link rel="shortcut icon" href="/favicon.ico" type="image/icon" />

    <!--[if (gt IE 9)|!(IE)]><!-->
    <link href="/css/screen.css" rel="stylesheet" />
    <!--<![endif]-->
    <!--[if IE 9 ]>
        <link href="/css/screen-ie9.css" rel="stylesheet" />
    <![endif]-->

    <script src="/js/modernizr-custom.js"></script>

<<<<<<< HEAD
    <script id="avatar-offset-shader-vs" type="x-shader/x-vertex">
        attribute vec3 aVertexPosition;
        attribute vec3 aVertexCorner;
        attribute vec2 aVertexUV;
        attribute vec2 aVertexNormal;

        attribute vec4 aVertexPowers1;
        attribute vec4 aVertexPowers2;

        uniform float uTime;

        uniform mat4 ufMatrix;

        uniform sampler2D uDataSampler;
        uniform sampler2D uMovementSampler;

        varying vec2 vTextureCoord;
        varying vec3 vFinalPoint;
        varying vec2 vNormal;
        varying float vTime;
        varying float vPower;

        void main(void) {

            float testTime = fract(uTime);

            float fTime = sin(testTime*6.283185307179586476925286766559)*0.25+0.25;

            vec4 cols = texture2D(uDataSampler,vec2(aVertexUV.x*1.4+testTime*2.0,fTime));

            cols.rgb=sin(clamp(cols.rgb*2.1-0.8,0.0,1.0)*3.1415926535897932384626433832795);

            float c = cols.x*aVertexPowers1.x + cols.y*aVertexPowers1.y + cols.z*aVertexPowers1.z + cols.a*aVertexPowers1.a*0.0;

            fTime = cos(testTime*6.283185307179586476925286766559)*0.25+0.25;

            cols = texture2D(uDataSampler,vec2(aVertexUV.x*2.00-testTime,fTime + 0.5));

            cols.rgb=sin(clamp(cols.rgb*2.1-0.8,0.0,1.0)*3.1415926535897932384626433832795);

            c += cols.x*aVertexPowers2.x + cols.y*aVertexPowers2.y + cols.z*aVertexPowers2.z+ cols.a*aVertexPowers2.a*0.0;

            //

            vec3 b3 = aVertexPosition*(0.2+0.4+c*0.2)+aVertexCorner*(c*2.0);//4

            float m = texture2D(uMovementSampler,vec2(b3.x+0.5,b3.y+0.5)).x;

            m = (1.0-cos(m*3.141592653589793238462643383279*4.00))*m*0.5+1.0;

            gl_Position = ufMatrix*vec4(b3*m, 1.0) ;

            //

            vFinalPoint = vec3(gl_Position.x,gl_Position.y,gl_Position.z);
            vTextureCoord = aVertexUV;
            vNormal = aVertexNormal;
            vTime = uTime;
            vPower = c;
        }
    </script>

    <script id="avatar-offset-shader-fs" type="x-shader/x-fragment">
        precision mediump float;

        varying vec2 vTextureCoord;
        varying vec3 vFinalPoint;
        varying vec2 vNormal;
        varying float vTime;
        varying float vPower;

        uniform sampler2D uHighlightSampler;
        uniform sampler2D uSheenSampler;

        void main(void) {

            vec4 oil = texture2D(uSheenSampler,vTextureCoord*vec2(17.0,1.0)+vec2(vTime*17.0+vPower*2.00,vTime*60.00+vTextureCoord.x));

            oil.a *= sin(vTime*690.0+vTextureCoord.x*4.0)*0.3+0.3;

            gl_FragColor =
                vec4(1.0,0.19,0.0,1.0)*(1.0+(vNormal.x-vNormal.y)*0.5)*(1.0-oil.a) +
                oil*oil.a +
                texture2D(uHighlightSampler,vTextureCoord*vec2(14.0,1.0)+vec2(-vTime+vPower*2.00 ,-vTime));

            gl_FragColor *= 1.0 + clamp(vFinalPoint.y-0.2,-0.5,0.5);

            gl_FragColor.a = 1.0;

        }
    </script>

    <script id="gradient-shader-vs" type="x-shader/x-vertex">
        attribute vec3 aVertexPosition;
        attribute vec2 aVertexUV;

        uniform mat4 ufMatrix;
        varying vec2 vTextureCoord;

        void main(void) {

            gl_Position = ufMatrix*vec4(aVertexPosition, 1.0) ;
            vTextureCoord = aVertexUV;

        }
    </script>

    <script id="gradient-shader-fs" type="x-shader/x-fragment">
        precision mediump float;

        varying vec2 vTextureCoord;

        uniform vec4 uColor;

        uniform sampler2D uTextureSampler;

        void main(void) {
            gl_FragColor = texture2D(uTextureSampler,vTextureCoord)*uColor;
        }
    </script>

    <script id="spectrum-shader-fs" type="x-shader/x-fragment">

        // still in development

        precision mediump float;

        uniform sampler2D uSpectrumTexture;
        uniform float uValues[32];

        uniform float uAlmostNumberOfBins;
        uniform float uOneOverTextureHeight;

        varying vec2 vTextureCoord;

        void main(void) {

            float vValue;

            int i = int(vTextureCoord.x*uAlmostNumberOfBins);

            if (vTextureCoord.y<uOneOverTextureHeight) {

                for (int x = 0; x < 32; x++) { if (x == i) vValue = uValues[x]; }

                gl_FragColor = vec4(vValue,vValue,vValue,1.0);

            } else {

                gl_FragColor = texture2D(uSpectrumTexture,vTextureCoord+vec2(0,-uOneOverTextureHeight));

            }

        }
=======
    <script>
    	var dataLayer = [];
>>>>>>> 9203e65267889e6a05aca4d34accb7c76bafdf8d
    </script>

</head>

<body>

    {{> skip-links }}

    <div class="site">

        {{> _header-default }}

        <main id="content" class="main" role="main">

            {{> body }}

        </main>

        {{> footer }}

    </div>

    {{#if deploy}}
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<<<<<<< HEAD
=======
    <script>window.jQuery || document.write('<script src="/../js/jquery.js">\x3C/script>')</script>

>>>>>>> 9203e65267889e6a05aca4d34accb7c76bafdf8d
    <script src="/../js/scripts.js"></script>
    {{else}}
    <script src="/../js/lib/bower/require.js" data-main="/../js/main-async"></script>
    {{/if}}

</body>

</html>
