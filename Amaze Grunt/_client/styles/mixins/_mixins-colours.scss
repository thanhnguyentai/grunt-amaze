// Mixins - Colours
// -------------------------


// Functions
// -------------------------

@function colour($colour, $tone: 'base') {
	@return map-get(map-get($colours, $colour), $tone);
}

@function is-direction($value) {

	$is-direction: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
	$is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));

	@return $is-direction or $is-angle;
}

@function legacy-direction($value) {

	@if is-direction($value) == false {
		@warn "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be an angle or a direction";
	}

	$conversion-map: (
		'to top'          : 'bottom',
		'to top right'    : 'bottom left',
		'to right top'    : 'left bottom',
		'to right'        : 'left',
		'to bottom right' : 'top left',
		'to right bottom' : 'left top',
		'to bottom'       : 'top',
		'to bottom left'  : 'top right',
		'to left bottom'  : 'right top',
		'to left'         : 'right',
		'to left top'     : 'right bottom',
		'to top left'     : 'bottom right'
	);

	@if map-has-key($conversion-map, $value) {
		@return map-get($conversion-map, $value);
	}

	@return 90deg - $value;
}


// Mixins
// -------------------------

@mixin linear-gradient($direction, $color-stops...) {

	@if is-direction($direction) == false {
		$color-stops: ($direction, $color-stops);
		$direction: 180deg;
	}

	background: nth(nth($color-stops, 1), 1);
	background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
	background: linear-gradient($direction, $color-stops);
}

@mixin radial-gradient-backgrounds($theme, $location: before, $position: absolute) {

	$value: map-get($gradients, $theme);

	$base: map-get($value, base);
	$primary: map-get($value, primary);
	$secondary: map-get($value, secondary);

	background-color: $base;

	&:#{$location} {
	    content: '';
	    display: block;
	    position: $position;
	    top: 0;
	    left: 0;
	    bottom: 0;
	    right: 0;

	    background: radial-gradient(circle at 0% 100%, rgba($primary, 0.3), transparent 75%), radial-gradient(circle at 100% 0%, rgba($secondary, 0.3), transparent 75%);
	}
}

@mixin trixel-background($trixel: white, $location: after, $position: absolute) {

	&:#{$location} {
        content: '';
        display: block;
        position: $position;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
	    background-image: url('../img/trixel-#{$trixel}.svg');
    	background-size: 23px 40px;
    	background-repeat: repeat;
	}
}
